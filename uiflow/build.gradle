apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

group = 'id.co.veritrans'
version = '0.11.2'

ext{
    espressoVersion = "2.2.2"
    supporTestVersion = "0.5"
    junitVersion = "4.12"
}


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}
repositories {
    jcenter()
}
android {
    def DEFAULT_PUBLISH
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 2
        versionName version

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            consumerProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        development {
            DEFAULT_PUBLISH = "developmentRelease"
        }

        production {
            DEFAULT_PUBLISH = "productionRelease"
        }
    }

    defaultPublishConfig = DEFAULT_PUBLISH
    publishNonDefault true
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10' //version required
}

dependencies {
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile "com.android.support:support-v4:23.4.0"
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile project(path: ':coreflow', configuration: 'developmentRelease')

}

publishing {
    publications {
        BintrayPublication(MavenPublication) {
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/uiflow-development-release.aar")
            groupId group
            artifactId 'uiflow'
            version version + "-SANDBOX"

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    if (it.group == 'id.co.veritrans') {
                        dependencyNode.appendNode('version', it.version + '-SANDBOX')
                    } else {
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }

        BintrayProductionPublication(MavenPublication) {
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/uiflow-production-release.aar")
            groupId group
            artifactId 'uiflow'
            version version

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = 'pt-midtrans'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/veritrans/veritrans-android.git'
        desc = 'Android SDK for integrating with veritrans.co.id'
        websiteUrl = "https://veritrans.co.id"
        publish = true
        publicDownloadNumbers = true
    }
    publications = ['BintrayProductionPublication', 'BintrayPublication']

}